{"version":3,"file":"eth-json-rpc-filters-CalvWF0C.js","sources":["../../node_modules/eth-json-rpc-filters/node_modules/pify/index.js","../../node_modules/eth-json-rpc-filters/base-filter.js","../../node_modules/eth-json-rpc-filters/base-filter-history.js","../../node_modules/eth-json-rpc-filters/hexUtils.js","../../node_modules/eth-json-rpc-filters/log-filter.js","../../node_modules/eth-json-rpc-filters/getBlocksForRange.js","../../node_modules/eth-json-rpc-filters/block-filter.js","../../node_modules/eth-json-rpc-filters/tx-filter.js","../../node_modules/eth-json-rpc-filters/index.js","../../node_modules/eth-json-rpc-filters/subscriptionManager.js"],"sourcesContent":["'use strict';\n\nconst processFn = (fn, options, proxy, unwrapped) => function (...arguments_) {\n\tconst P = options.promiseModule;\n\n\treturn new P((resolve, reject) => {\n\t\tif (options.multiArgs) {\n\t\t\targuments_.push((...result) => {\n\t\t\t\tif (options.errorFirst) {\n\t\t\t\t\tif (result[0]) {\n\t\t\t\t\t\treject(result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.shift();\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (options.errorFirst) {\n\t\t\targuments_.push((error, result) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\targuments_.push(resolve);\n\t\t}\n\n\t\tconst self = this === proxy ? unwrapped : this;\n\t\tReflect.apply(fn, self, arguments_);\n\t});\n};\n\nconst filterCache = new WeakMap();\n\nmodule.exports = (input, options) => {\n\toptions = {\n\t\texclude: [/.+(?:Sync|Stream)$/],\n\t\terrorFirst: true,\n\t\tpromiseModule: Promise,\n\t\t...options\n\t};\n\n\tconst objectType = typeof input;\n\tif (!(input !== null && (objectType === 'object' || objectType === 'function'))) {\n\t\tthrow new TypeError(`Expected \\`input\\` to be a \\`Function\\` or \\`Object\\`, got \\`${input === null ? 'null' : objectType}\\``);\n\t}\n\n\tconst filter = (target, key) => {\n\t\tlet cached = filterCache.get(target);\n\n\t\tif (!cached) {\n\t\t\tcached = {};\n\t\t\tfilterCache.set(target, cached);\n\t\t}\n\n\t\tif (key in cached) {\n\t\t\treturn cached[key];\n\t\t}\n\n\t\tconst match = pattern => (typeof pattern === 'string' || typeof key === 'symbol') ? key === pattern : pattern.test(key);\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(target, key);\n\t\tconst writableOrConfigurableOwn = (desc === undefined || desc.writable || desc.configurable);\n\t\tconst included = options.include ? options.include.some(match) : !options.exclude.some(match);\n\t\tconst shouldFilter = included && writableOrConfigurableOwn;\n\t\tcached[key] = shouldFilter;\n\t\treturn shouldFilter;\n\t};\n\n\tconst cache = new WeakMap();\n\n\tconst proxy = new Proxy(input, {\n\t\tapply(target, thisArg, args) {\n\t\t\tconst cached = cache.get(target);\n\n\t\t\tif (cached) {\n\t\t\t\treturn Reflect.apply(cached, thisArg, args);\n\t\t\t}\n\n\t\t\tconst pified = options.excludeMain ? target : processFn(target, options, proxy, target);\n\t\t\tcache.set(target, pified);\n\t\t\treturn Reflect.apply(pified, thisArg, args);\n\t\t},\n\n\t\tget(target, key) {\n\t\t\tconst property = target[key];\n\n\t\t\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\t\t\tif (!filter(target, key) || property === Function.prototype[key]) {\n\t\t\t\treturn property;\n\t\t\t}\n\n\t\t\tconst cached = cache.get(property);\n\n\t\t\tif (cached) {\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tif (typeof property === 'function') {\n\t\t\t\tconst pified = processFn(property, options, proxy, target);\n\t\t\t\tcache.set(property, pified);\n\t\t\t\treturn pified;\n\t\t\t}\n\n\t\t\treturn property;\n\t\t}\n\t});\n\n\treturn proxy;\n};\n","const SafeEventEmitter = require('@metamask/safe-event-emitter').default\n\nclass BaseFilter extends SafeEventEmitter {\n\n  constructor () {\n    super()\n    this.updates = []\n  }\n\n  async initialize () {}\n\n  async update () {\n    throw new Error('BaseFilter - no update method specified')\n  }\n\n  addResults (newResults) {\n    this.updates = this.updates.concat(newResults)\n    newResults.forEach(result => this.emit('update', result))\n  }\n\n  addInitialResults (newResults) {}\n\n  getChangesAndClear () {\n    const updates = this.updates\n    this.updates = []\n    return updates\n  }\n  \n}\n\nmodule.exports = BaseFilter\n","const BaseFilter = require('./base-filter')\n\n// tracks all results ever recorded\nclass BaseFilterWithHistory extends BaseFilter {\n\n  constructor () {\n    super()\n    this.allResults = []\n  }\n\n  async update () {\n    throw new Error('BaseFilterWithHistory - no update method specified')\n  }\n\n  addResults (newResults) {\n    this.allResults = this.allResults.concat(newResults)\n    super.addResults(newResults)\n  }\n\n  addInitialResults (newResults) {\n    this.allResults = this.allResults.concat(newResults)\n    super.addInitialResults(newResults)\n  }\n\n  getAllResults () {\n    return this.allResults\n  }\n\n}\n\nmodule.exports = BaseFilterWithHistory","\nmodule.exports = {\n  minBlockRef,\n  maxBlockRef,\n  sortBlockRefs,\n  bnToHex,\n  blockRefIsNumber,\n  hexToInt,\n  incrementHexInt,\n  intToHex,\n  unsafeRandomBytes,\n}\n\nfunction minBlockRef(...refs) {\n  const sortedRefs = sortBlockRefs(refs)\n  return sortedRefs[0]\n}\n\nfunction maxBlockRef(...refs) {\n  const sortedRefs = sortBlockRefs(refs)\n  return sortedRefs[sortedRefs.length-1]\n}\n\nfunction sortBlockRefs(refs) {\n  return refs.sort((refA, refB) => {\n    if (refA === 'latest' || refB === 'earliest') return 1\n    if (refB === 'latest' || refA === 'earliest') return -1\n    return hexToInt(refA) - hexToInt(refB)\n  })\n}\n\nfunction bnToHex(bn) {\n  return '0x' + bn.toString(16)\n}\n\nfunction blockRefIsNumber(blockRef){\n  return blockRef && !['earliest', 'latest', 'pending'].includes(blockRef)\n}\n\nfunction hexToInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString\n  return Number.parseInt(hexString, 16)\n}\n\nfunction incrementHexInt(hexString){\n  if (hexString === undefined || hexString === null) return hexString\n  const value = hexToInt(hexString)\n  return intToHex(value + 1)\n}\n\nfunction intToHex(int) {\n  if (int === undefined || int === null) return int\n  let hexString = int.toString(16)\n  const needsLeftPad = hexString.length % 2\n  if (needsLeftPad) hexString = '0' + hexString\n  return '0x' + hexString\n}\n\nfunction unsafeRandomBytes(byteCount) {\n  let result = '0x'\n  for (let i = 0; i < byteCount; i++) {\n    result += unsafeRandomNibble()\n    result += unsafeRandomNibble()\n  }\n  return result\n}\n\nfunction unsafeRandomNibble() {\n  return Math.floor(Math.random() * 16).toString(16)\n}\n","const EthQuery = require('eth-query')\nconst pify = require('pify')\nconst BaseFilterWithHistory = require('./base-filter-history')\nconst { bnToHex, hexToInt, incrementHexInt, minBlockRef, blockRefIsNumber } = require('./hexUtils')\n\nclass LogFilter extends BaseFilterWithHistory {\n\n  constructor ({ provider, params }) {\n    super()\n    this.type = 'log'\n    this.ethQuery = new EthQuery(provider)\n    this.params = Object.assign({\n      fromBlock: 'latest',\n      toBlock: 'latest',\n      address: undefined,\n      topics: [],\n    }, params)\n    // normalize address parameter\n    if (this.params.address) {\n      // ensure array\n      if (!Array.isArray(this.params.address)) {\n        this.params.address = [this.params.address]\n      }\n      // ensure lowercase\n      this.params.address = this.params.address.map(address => address.toLowerCase())\n    }\n  }\n\n  async initialize({ currentBlock }) {\n    // resolve params.fromBlock\n    let fromBlock = this.params.fromBlock\n    if (['latest', 'pending'].includes(fromBlock)) fromBlock = currentBlock\n    if ('earliest' === fromBlock) fromBlock = '0x0'\n    this.params.fromBlock = fromBlock\n    // set toBlock for initial lookup\n    const toBlock = minBlockRef(this.params.toBlock, currentBlock)\n    const params = Object.assign({}, this.params, { toBlock })\n    // fetch logs and add to results\n    const newLogs = await this._fetchLogs(params)\n    this.addInitialResults(newLogs)\n  }\n\n  async update ({ oldBlock, newBlock }) {\n    // configure params for this update\n    const toBlock = newBlock\n    let fromBlock\n    // oldBlock is empty on first sync\n    if (oldBlock) {\n      fromBlock = incrementHexInt(oldBlock)\n    } else {\n      fromBlock = newBlock\n    }\n    // fetch logs\n    const params = Object.assign({}, this.params, { fromBlock, toBlock })\n    const newLogs = await this._fetchLogs(params)\n    const matchingLogs = newLogs.filter(log => this.matchLog(log))\n\n    // add to results\n    this.addResults(matchingLogs)\n  }\n\n  async _fetchLogs (params) {\n    const newLogs = await pify(cb => this.ethQuery.getLogs(params, cb))()\n    // add to results\n    return newLogs\n  }\n\n  matchLog(log) {\n    // check if block number in bounds:\n    if (hexToInt(this.params.fromBlock) >= hexToInt(log.blockNumber)) return false\n    if (blockRefIsNumber(this.params.toBlock) && hexToInt(this.params.toBlock) <= hexToInt(log.blockNumber)) return false\n\n    // address is correct:\n    const normalizedLogAddress = log.address && log.address.toLowerCase()\n    if (this.params.address && normalizedLogAddress && !this.params.address.includes(normalizedLogAddress)) return false\n\n    // topics match:\n    // topics are position-dependant\n    // topics can be nested to represent `or` [[a || b], c]\n    // topics can be null, representing a wild card for that position\n    const topicsMatch = this.params.topics.every((topicPattern, index) => {\n      // pattern is longer than actual topics\n      let logTopic = log.topics[index]\n      if (!logTopic) return false\n      logTopic = logTopic.toLowerCase()\n      // normalize subTopics\n      let subtopicsToMatch = Array.isArray(topicPattern) ? topicPattern : [topicPattern]\n      // check for wild card\n      const subtopicsIncludeWildcard = subtopicsToMatch.includes(null)\n      if (subtopicsIncludeWildcard) return true\n      subtopicsToMatch = subtopicsToMatch.map(topic => topic.toLowerCase())\n      // check each possible matching topic\n      const topicDoesMatch = subtopicsToMatch.includes(logTopic)\n      return topicDoesMatch\n    })\n\n    return topicsMatch\n  }\n\n}\n\nmodule.exports = LogFilter\n","module.exports = getBlocksForRange\n\nasync function getBlocksForRange({ provider, fromBlock, toBlock }) {\n  if (!fromBlock) fromBlock = toBlock\n\n  const fromBlockNumber = hexToInt(fromBlock)\n  const toBlockNumber = hexToInt(toBlock)\n  const blockCountToQuery = toBlockNumber - fromBlockNumber + 1\n  // load all blocks from old to new (inclusive)\n  const missingBlockNumbers = Array(blockCountToQuery).fill()\n                              .map((_,index) => fromBlockNumber + index)\n                              .map(intToHex)\n  let blockBodies = await Promise.all(\n    missingBlockNumbers.map(blockNum => query(provider, 'eth_getBlockByNumber', [blockNum, false]))\n  )\n  blockBodies = blockBodies.filter(block => block !== null);\n  return blockBodies\n}\n\nfunction hexToInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString\n  return Number.parseInt(hexString, 16)\n}\n\nfunction incrementHexInt(hexString){\n  if (hexString === undefined || hexString === null) return hexString\n  const value = hexToInt(hexString)\n  return intToHex(value + 1)\n}\n\nfunction intToHex(int) {\n  if (int === undefined || int === null) return int\n  const hexString = int.toString(16)\n  return '0x' + hexString\n}\n\nfunction sendAsync(provider, request) {\n  return new Promise((resolve, reject) => {\n    provider.sendAsync(request, (error, response) => {\n      if (error) {\n        reject(error);\n      } else if (response.error) {\n        reject(response.error);\n      } else if (response.result) {\n        resolve(response.result);\n      } else {\n        reject(new Error(\"Result was empty\"));\n      }\n    });\n  });\n}\n\nasync function query(provider, method, params) {\n  for (let i = 0; i < 3; i++) {\n    try {\n      return await sendAsync(provider, {\n        id: 1,\n        jsonrpc: \"2.0\",\n        method,\n        params,\n      });\n    } catch (error) {\n      console.error(\n        `provider.sendAsync failed: ${error.stack || error.message || error}`\n      );\n    }\n  }\n  return null;\n}\n","const BaseFilter = require('./base-filter')\nconst getBlocksForRange = require('./getBlocksForRange')\nconst { incrementHexInt } = require('./hexUtils')\n\nclass BlockFilter extends BaseFilter {\n\n  constructor ({ provider, params }) {\n    super()\n    this.type = 'block'\n    this.provider = provider\n  }\n\n  async update ({ oldBlock, newBlock }) {\n    const toBlock = newBlock\n    const fromBlock = incrementHexInt(oldBlock)\n    const blockBodies = await getBlocksForRange({ provider: this.provider, fromBlock, toBlock })\n    const blockHashes = blockBodies.map((block) => block.hash)\n    this.addResults(blockHashes)\n  }\n\n}\n\nmodule.exports = BlockFilter\n","const BaseFilter = require('./base-filter')\nconst getBlocksForRange = require('./getBlocksForRange')\nconst { incrementHexInt } = require('./hexUtils')\n\nclass TxFilter extends BaseFilter {\n\n  constructor ({ provider }) {\n    super()\n    this.type = 'tx'\n    this.provider = provider\n  }\n\n  async update ({ oldBlock }) {\n    const toBlock = oldBlock\n    const fromBlock = incrementHexInt(oldBlock)\n    const blocks = await getBlocksForRange({ provider: this.provider, fromBlock, toBlock })\n    const blockTxHashes = []\n    for (const block of blocks) {\n      blockTxHashes.push(...block.transactions)\n    }\n    // add to results\n    this.addResults(blockTxHashes)\n  }\n\n}\n\nmodule.exports = TxFilter\n","const Mutex = require('async-mutex').Mutex\nconst { createAsyncMiddleware, createScaffoldMiddleware } = require('json-rpc-engine')\nconst LogFilter = require('./log-filter.js')\nconst BlockFilter = require('./block-filter.js')\nconst TxFilter = require('./tx-filter.js')\nconst { intToHex, hexToInt } = require('./hexUtils')\n\nmodule.exports = createEthFilterMiddleware\n\nfunction createEthFilterMiddleware({ blockTracker, provider }) {\n\n  // create filter collection\n  let filterIndex = 0\n  let filters = {}\n  // create update mutex\n  const mutex = new Mutex()\n  const waitForFree = mutexMiddlewareWrapper({ mutex })\n\n  const middleware = createScaffoldMiddleware({\n    // install filters\n    eth_newFilter:                   waitForFree(toFilterCreationMiddleware(newLogFilter)),\n    eth_newBlockFilter:              waitForFree(toFilterCreationMiddleware(newBlockFilter)),\n    eth_newPendingTransactionFilter: waitForFree(toFilterCreationMiddleware(newPendingTransactionFilter)),\n    // uninstall filters\n    eth_uninstallFilter:             waitForFree(toAsyncRpcMiddleware(uninstallFilterHandler)),\n    // checking filter changes\n    eth_getFilterChanges:            waitForFree(toAsyncRpcMiddleware(getFilterChanges)),\n    eth_getFilterLogs:               waitForFree(toAsyncRpcMiddleware(getFilterLogs)),\n  })\n\n  // setup filter updating and destroy handler\n  const filterUpdater = async ({ oldBlock, newBlock }) => {\n    if (filters.length === 0) return\n    // lock update reads\n    const releaseLock = await mutex.acquire()\n    try {\n      // process all filters in parallel\n      await Promise.all(objValues(filters).map(async (filter) => {\n        try {\n         await filter.update({ oldBlock, newBlock })\n        } catch (err) {\n          // handle each error individually so filter update errors don't affect other filters\n          console.error(err)\n        }\n      }))\n    } catch (err) {\n      // log error so we don't skip the releaseLock\n      console.error(err)\n    }\n    // unlock update reads\n    releaseLock()\n  }\n\n  // expose filter methods directly\n  middleware.newLogFilter = newLogFilter\n  middleware.newBlockFilter = newBlockFilter\n  middleware.newPendingTransactionFilter = newPendingTransactionFilter\n  middleware.uninstallFilter = uninstallFilterHandler\n  middleware.getFilterChanges = getFilterChanges\n  middleware.getFilterLogs = getFilterLogs\n\n  // expose destroy method for cleanup\n  middleware.destroy = () => {\n    uninstallAllFilters()\n  }\n\n  return middleware\n\n  //\n  // new filters\n  //\n\n  async function newLogFilter(params) {\n    const filter = new LogFilter({ provider, params })\n    const filterIndex = await installFilter(filter)\n    return filter\n  }\n\n  async function newBlockFilter() {\n    const filter = new BlockFilter({ provider })\n    const filterIndex = await installFilter(filter)\n    return filter\n  }\n\n  async function newPendingTransactionFilter() {\n    const filter = new TxFilter({ provider })\n    const filterIndex = await installFilter(filter)\n    return filter\n  }\n\n  //\n  // get filter changes\n  //\n\n  async function getFilterChanges(filterIndexHex) {\n    const filterIndex = hexToInt(filterIndexHex)\n    const filter = filters[filterIndex]\n    if (!filter) {\n      throw new Error(`No filter for index \"${filterIndex}\"`)\n    }\n    const results = filter.getChangesAndClear()\n    return results\n  }\n\n  async function getFilterLogs(filterIndexHex) {\n    const filterIndex = hexToInt(filterIndexHex)\n    const filter = filters[filterIndex]\n    if (!filter) {\n      throw new Error(`No filter for index \"${filterIndex}\"`)\n    }\n    // only return results for log filters\n    let results = []\n    if (filter.type === 'log') {\n      results = filter.getAllResults()\n    }\n    return results\n  }\n\n\n  //\n  // remove filters\n  //\n\n\n  async function uninstallFilterHandler(filterIndexHex) {\n    // check filter exists\n    const filterIndex = hexToInt(filterIndexHex)\n    const filter = filters[filterIndex]\n    const result = Boolean(filter)\n    // uninstall filter\n    if (result) {\n      await uninstallFilter(filterIndex)\n    }\n    return result\n  }\n\n  //\n  // utils\n  //\n\n  async function installFilter(filter) {\n    const prevFilterCount = objValues(filters).length\n    // install filter\n    const currentBlock = await blockTracker.getLatestBlock()\n    await filter.initialize({ currentBlock })\n    filterIndex++\n    filters[filterIndex] = filter\n    filter.id = filterIndex\n    filter.idHex = intToHex(filterIndex)\n    // update block tracker subs\n    const newFilterCount = objValues(filters).length\n    updateBlockTrackerSubs({ prevFilterCount, newFilterCount })\n    return filterIndex\n  }\n\n  async function uninstallFilter(filterIndex) {\n    const prevFilterCount = objValues(filters).length\n    delete filters[filterIndex]\n    // update block tracker subs\n    const newFilterCount = objValues(filters).length\n    updateBlockTrackerSubs({ prevFilterCount, newFilterCount })\n  }\n\n  async function uninstallAllFilters() {\n    const prevFilterCount = objValues(filters).length\n    filters = {}\n    // update block tracker subs\n    updateBlockTrackerSubs({ prevFilterCount, newFilterCount: 0 })\n  }\n\n  function updateBlockTrackerSubs({ prevFilterCount, newFilterCount }) {\n    // subscribe\n    if (prevFilterCount === 0 && newFilterCount > 0) {\n      blockTracker.on('sync', filterUpdater)\n      return\n    }\n    // unsubscribe\n    if (prevFilterCount > 0 && newFilterCount === 0) {\n      blockTracker.removeListener('sync', filterUpdater)\n      return\n    }\n  }\n\n}\n\n// helper for turning filter constructors into rpc middleware\nfunction toFilterCreationMiddleware(createFilterFn) {\n  return toAsyncRpcMiddleware(async (...args) => {\n    const filter = await createFilterFn(...args)\n    const result = intToHex(filter.id)\n    return result\n  })\n}\n\n// helper for pulling out req.params and setting res.result\nfunction toAsyncRpcMiddleware(asyncFn) {\n  return createAsyncMiddleware(async (req, res) => {\n    const result = await asyncFn.apply(null, req.params)\n    res.result = result\n  })\n}\n\nfunction mutexMiddlewareWrapper({ mutex }) {\n  return (middleware) => {\n    return async (req, res, next, end) => {\n      // wait for mutex available\n      // we can release immediately because\n      // we just need to make sure updates aren't active\n      const releaseLock = await mutex.acquire()\n      releaseLock()\n      middleware(req, res, next, end)\n    }\n  }\n}\n\nfunction objValues(obj, fn){\n  const values = []\n  for (let key in obj) {\n    values.push(obj[key])\n  }\n  return values\n}\n","const SafeEventEmitter = require('@metamask/safe-event-emitter').default\nconst { createAsyncMiddleware, createScaffoldMiddleware } = require('json-rpc-engine')\nconst createFilterMiddleware = require('./index.js')\nconst { unsafeRandomBytes, incrementHexInt } = require('./hexUtils.js')\nconst getBlocksForRange = require('./getBlocksForRange.js')\n\nmodule.exports = createSubscriptionMiddleware\n\n\nfunction createSubscriptionMiddleware({ blockTracker, provider }) {\n  // state and utilities for handling subscriptions\n  const subscriptions = {}\n  const filterManager = createFilterMiddleware({ blockTracker, provider })\n\n  // internal flag\n  let isDestroyed = false\n\n  // create subscriptionManager api object\n  const events = new SafeEventEmitter()\n  const middleware = createScaffoldMiddleware({\n    eth_subscribe: createAsyncMiddleware(subscribe),\n    eth_unsubscribe: createAsyncMiddleware(unsubscribe),\n  })\n  middleware.destroy = destroy\n  return { events, middleware }\n\n  async function subscribe(req, res) {\n\n    if (isDestroyed) throw new Error(\n      'SubscriptionManager - attempting to use after destroying'\n    )\n\n    const subscriptionType = req.params[0]\n    // subId is 16 byte hex string\n    const subId = unsafeRandomBytes(16)\n\n    // create sub\n    let sub\n    switch (subscriptionType) {\n      case 'newHeads':\n        sub = createSubNewHeads({ subId })\n        break\n      case 'logs':\n        const filterParams = req.params[1]\n        const filter = await filterManager.newLogFilter(filterParams)\n        sub = createSubFromFilter({ subId, filter })\n        break\n      default:\n        throw new Error(`SubscriptionManager - unsupported subscription type \"${subscriptionType}\"`)\n\n    }\n    subscriptions[subId] = sub\n\n    res.result = subId\n    return\n\n    function createSubNewHeads({ subId }) {\n      const sub = {\n        type: subscriptionType,\n        destroy: async () => {\n          blockTracker.removeListener('sync', sub.update)\n        },\n        update: async ({ oldBlock, newBlock }) => {\n          // for newHeads\n          const toBlock = newBlock\n          const fromBlock = incrementHexInt(oldBlock)\n          const rawBlocks = await getBlocksForRange({ provider, fromBlock, toBlock })\n          const results = rawBlocks.map(normalizeBlock).filter(block => block !== null)\n          results.forEach((value) => {\n            _emitSubscriptionResult(subId, value)\n          })\n        }\n      }\n      // check for subscription updates on new block\n      blockTracker.on('sync', sub.update)\n      return sub\n    }\n\n    function createSubFromFilter({ subId, filter }) {\n      filter.on('update', result => _emitSubscriptionResult(subId, result))\n      const sub = {\n        type: subscriptionType,\n        destroy: async () => {\n          return await filterManager.uninstallFilter(filter.idHex)\n        },\n      }\n      return sub\n    }\n  }\n\n  async function unsubscribe(req, res) {\n\n    if (isDestroyed) throw new Error(\n      'SubscriptionManager - attempting to use after destroying'\n    )\n\n    const id = req.params[0]\n    const subscription = subscriptions[id]\n    // if missing, return \"false\" to indicate it was not removed\n    if (!subscription) {\n      res.result = false\n      return\n    }\n    // cleanup subscription\n    delete subscriptions[id]\n    await subscription.destroy()\n    res.result = true\n  }\n\n  function _emitSubscriptionResult(filterIdHex, value) {\n    events.emit('notification', {\n      jsonrpc: '2.0',\n      method: 'eth_subscription',\n      params: {\n        subscription: filterIdHex,\n        result: value,\n      },\n    })\n  }\n\n  function destroy() {\n    events.removeAllListeners()\n    for (const id in subscriptions) {\n      subscriptions[id].destroy()\n      delete subscriptions[id]\n    }\n    isDestroyed = true\n  }\n}\n\nfunction normalizeBlock(block) {\n  if (block === null || block === undefined) {\n    return null;\n  }\n  return {\n    hash: block.hash,\n    parentHash: block.parentHash,\n    sha3Uncles: block.sha3Uncles,\n    miner: block.miner,\n    stateRoot: block.stateRoot,\n    transactionsRoot: block.transactionsRoot,\n    receiptsRoot: block.receiptsRoot,\n    logsBloom: block.logsBloom,\n    difficulty: block.difficulty,\n    number: block.number,\n    gasLimit: block.gasLimit,\n    gasUsed: block.gasUsed,\n    nonce: block.nonce,\n    mixHash: block.mixHash,\n    timestamp: block.timestamp,\n    extraData: block.extraData,\n  }\n}\n"],"names":["processFn","fn","options","proxy","unwrapped","arguments_","P","resolve","reject","result","error","filterCache","pify","input","objectType","filter","target","key","cached","match","pattern","desc","writableOrConfigurableOwn","shouldFilter","cache","thisArg","args","pified","property","SafeEventEmitter","require$$0","newResults","updates","baseFilter","BaseFilter","baseFilterHistory","BaseFilterWithHistory","hexUtils","minBlockRef","maxBlockRef","sortBlockRefs","bnToHex","blockRefIsNumber","hexToInt","incrementHexInt","intToHex","unsafeRandomBytes","refs","sortedRefs","refA","refB","bn","blockRef","hexString","value","int","byteCount","i","unsafeRandomNibble","EthQuery","require$$1","require$$2","require$$3","provider","params","address","currentBlock","fromBlock","toBlock","newLogs","oldBlock","newBlock","matchingLogs","log","cb","normalizedLogAddress","topicPattern","index","logTopic","subtopicsToMatch","topic","logFilter","LogFilter","getBlocksForRange_1","getBlocksForRange","fromBlockNumber","blockCountToQuery","missingBlockNumbers","_","blockBodies","blockNum","query","block","sendAsync","request","response","method","blockHashes","blockFilter","BlockFilter","blocks","blockTxHashes","txFilter","TxFilter","Mutex","createAsyncMiddleware","createScaffoldMiddleware","require$$4","require$$5","ethJsonRpcFilters","createEthFilterMiddleware","blockTracker","filterIndex","filters","mutex","waitForFree","mutexMiddlewareWrapper","middleware","toFilterCreationMiddleware","newLogFilter","newBlockFilter","newPendingTransactionFilter","toAsyncRpcMiddleware","uninstallFilterHandler","getFilterChanges","getFilterLogs","filterUpdater","releaseLock","objValues","err","uninstallAllFilters","installFilter","filterIndexHex","results","uninstallFilter","prevFilterCount","newFilterCount","updateBlockTrackerSubs","createFilterFn","asyncFn","req","res","next","end","obj","values","createFilterMiddleware","subscriptionManager","createSubscriptionMiddleware","subscriptions","filterManager","isDestroyed","events","subscribe","unsubscribe","destroy","subscriptionType","subId","sub","createSubNewHeads","filterParams","createSubFromFilter","normalizeBlock","_emitSubscriptionResult","id","subscription","filterIdHex"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}