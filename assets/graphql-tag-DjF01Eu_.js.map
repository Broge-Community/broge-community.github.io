{"version":3,"file":"graphql-tag-DjF01Eu_.js","sources":["../../node_modules/graphql-tag/lib/index.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { parse } from 'graphql';\nvar docCache = new Map();\nvar fragmentSourceMap = new Map();\nvar printFragmentWarnings = true;\nvar experimentalFragmentVariables = false;\nfunction normalize(string) {\n    return string.replace(/[\\s,]+/g, ' ').trim();\n}\nfunction cacheKeyFromLoc(loc) {\n    return normalize(loc.source.body.substring(loc.start, loc.end));\n}\nfunction processFragments(ast) {\n    var seenKeys = new Set();\n    var definitions = [];\n    ast.definitions.forEach(function (fragmentDefinition) {\n        if (fragmentDefinition.kind === 'FragmentDefinition') {\n            var fragmentName = fragmentDefinition.name.value;\n            var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n            var sourceKeySet = fragmentSourceMap.get(fragmentName);\n            if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n                if (printFragmentWarnings) {\n                    console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n                        + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n                        + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n                }\n            }\n            else if (!sourceKeySet) {\n                fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n            }\n            sourceKeySet.add(sourceKey);\n            if (!seenKeys.has(sourceKey)) {\n                seenKeys.add(sourceKey);\n                definitions.push(fragmentDefinition);\n            }\n        }\n        else {\n            definitions.push(fragmentDefinition);\n        }\n    });\n    return __assign(__assign({}, ast), { definitions: definitions });\n}\nfunction stripLoc(doc) {\n    var workSet = new Set(doc.definitions);\n    workSet.forEach(function (node) {\n        if (node.loc)\n            delete node.loc;\n        Object.keys(node).forEach(function (key) {\n            var value = node[key];\n            if (value && typeof value === 'object') {\n                workSet.add(value);\n            }\n        });\n    });\n    var loc = doc.loc;\n    if (loc) {\n        delete loc.startToken;\n        delete loc.endToken;\n    }\n    return doc;\n}\nfunction parseDocument(source) {\n    var cacheKey = normalize(source);\n    if (!docCache.has(cacheKey)) {\n        var parsed = parse(source, {\n            experimentalFragmentVariables: experimentalFragmentVariables,\n            allowLegacyFragmentVariables: experimentalFragmentVariables\n        });\n        if (!parsed || parsed.kind !== 'Document') {\n            throw new Error('Not a valid GraphQL document.');\n        }\n        docCache.set(cacheKey, stripLoc(processFragments(parsed)));\n    }\n    return docCache.get(cacheKey);\n}\nexport function gql(literals) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (typeof literals === 'string') {\n        literals = [literals];\n    }\n    var result = literals[0];\n    args.forEach(function (arg, i) {\n        if (arg && arg.kind === 'Document') {\n            result += arg.loc.source.body;\n        }\n        else {\n            result += arg;\n        }\n        result += literals[i + 1];\n    });\n    return parseDocument(result);\n}\nexport function resetCaches() {\n    docCache.clear();\n    fragmentSourceMap.clear();\n}\nexport function disableFragmentWarnings() {\n    printFragmentWarnings = false;\n}\nexport function enableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = true;\n}\nexport function disableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = false;\n}\nvar extras = {\n    gql: gql,\n    resetCaches: resetCaches,\n    disableFragmentWarnings: disableFragmentWarnings,\n    enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables: disableExperimentalFragmentVariables\n};\n(function (gql_1) {\n    gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;\n})(gql || (gql = {}));\ngql[\"default\"] = gql;\nexport default gql;\n//# sourceMappingURL=index.js.map"],"names":["docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","normalize","string","cacheKeyFromLoc","loc","processFragments","ast","seenKeys","definitions","fragmentDefinition","fragmentName","sourceKey","sourceKeySet","__assign","stripLoc","doc","workSet","node","key","value","parseDocument","source","cacheKey","parsed","parse","gql","literals","args","_i","result","arg","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","extras","gql_1"],"mappings":"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","x_google_ignoreList":[0]}