{"version":3,"file":"uint8arrays-BSAB2j_x.js","sources":["../../node_modules/uint8arrays/esm/src/alloc.js","../../node_modules/uint8arrays/esm/src/concat.js","../../node_modules/uint8arrays/esm/src/util/bases.js","../../node_modules/uint8arrays/esm/src/from-string.js","../../node_modules/uint8arrays/esm/src/to-string.js"],"sourcesContent":["export function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return globalThis.Buffer.alloc(size);\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return globalThis.Buffer.allocUnsafe(size);\n  }\n  return new Uint8Array(size);\n}","import { allocUnsafe } from './alloc.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(string, 'utf8');\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}"],"names":["allocUnsafe","size","concat","arrays","length","acc","curr","output","offset","arr","createCodec","name","prefix","encode","decode","string","buf","str","ascii","i","BASES","bases","fromString","encoding","base","toString","array"],"mappings":"+CAMO,SAASA,EAAYC,EAAO,EAAG,CACpC,OAAI,WAAW,QAAU,MAAQ,WAAW,OAAO,aAAe,KACzD,WAAW,OAAO,YAAYA,CAAI,EAEpC,IAAI,WAAWA,CAAI,CAC5B,CCVO,SAASC,EAAOC,EAAQC,EAAQ,CAChCA,IACHA,EAASD,EAAO,OAAO,CAACE,EAAKC,IAASD,EAAMC,EAAK,OAAQ,CAAC,GAE5D,MAAMC,EAASP,EAAYI,CAAM,EACjC,IAAII,EAAS,EACb,UAAWC,KAAON,EAChBI,EAAO,IAAIE,EAAKD,CAAM,EACtBA,GAAUC,EAAI,OAEhB,OAAOF,CACT,CCVA,SAASG,EAAYC,EAAMC,EAAQC,EAAQC,EAAQ,CACjD,MAAO,CACL,KAAAH,EACA,OAAAC,EACA,QAAS,CACP,KAAAD,EACA,OAAAC,EACA,OAAAC,CACD,EACD,QAAS,CAAE,OAAAC,CAAQ,CACvB,CACA,CACA,MAAMC,EAASL,EAAY,OAAQ,IAAKM,GAE/B,IADS,IAAI,YAAY,MAAM,EACjB,OAAOA,CAAG,EAC9BC,GACe,IAAI,cACL,OAAOA,EAAI,UAAU,CAAC,CAAC,CACvC,EACKC,EAAQR,EAAY,QAAS,IAAKM,GAAO,CAC7C,IAAID,EAAS,IACb,QAASI,EAAI,EAAGA,EAAIH,EAAI,OAAQG,IAC9BJ,GAAU,OAAO,aAAaC,EAAIG,CAAC,CAAC,EAEtC,OAAOJ,CACT,EAAGE,GAAO,CACRA,EAAMA,EAAI,UAAU,CAAC,EACrB,MAAMD,EAAMhB,EAAYiB,EAAI,MAAM,EAClC,QAASE,EAAI,EAAGA,EAAIF,EAAI,OAAQE,IAC9BH,EAAIG,CAAC,EAAIF,EAAI,WAAWE,CAAC,EAE3B,OAAOH,CACT,CAAC,EACKI,EAAQ,CACZ,KAAML,EACN,QAASA,EACT,IAAKM,EAAM,OACX,OAAQH,EACR,MAAOA,EACP,OAAQA,EACR,GAAGG,CACL,EC1CO,SAASC,EAAWP,EAAQQ,EAAW,OAAQ,CACpD,MAAMC,EAAOH,EAAME,CAAQ,EAC3B,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,yBAA0BD,CAAU,GAAE,EAExD,OAAKA,IAAa,QAAUA,IAAa,UAAY,WAAW,QAAU,MAAQ,WAAW,OAAO,MAAQ,KACnG,WAAW,OAAO,KAAKR,EAAQ,MAAM,EAEvCS,EAAK,QAAQ,OAAO,GAAIA,EAAK,MAAQ,GAAGT,CAAQ,EAAC,CAC1D,CCTO,SAASU,EAASC,EAAOH,EAAW,OAAQ,CACjD,MAAMC,EAAOH,EAAME,CAAQ,EAC3B,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,yBAA0BD,CAAU,GAAE,EAExD,OAAKA,IAAa,QAAUA,IAAa,UAAY,WAAW,QAAU,MAAQ,WAAW,OAAO,MAAQ,KACnG,WAAW,OAAO,KAAKG,EAAM,OAAQA,EAAM,WAAYA,EAAM,UAAU,EAAE,SAAS,MAAM,EAE1FF,EAAK,QAAQ,OAAOE,CAAK,EAAE,UAAU,CAAC,CAC/C","x_google_ignoreList":[0,1,2,3,4]}