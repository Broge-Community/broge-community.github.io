{"version":3,"file":"fast-safe-stringify-Bs-GRd1a.js","sources":["../../node_modules/fast-safe-stringify/index.js"],"sourcesContent":["module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar LIMIT_REPLACE_NODE = '[...]'\nvar CIRCULAR_REPLACE_NODE = '[Circular]'\n\nvar arr = []\nvar replacerStack = []\n\nfunction defaultOptions () {\n  return {\n    depthLimit: Number.MAX_SAFE_INTEGER,\n    edgesLimit: Number.MAX_SAFE_INTEGER\n  }\n}\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  decirc(obj, '', 0, [], undefined, 0, options)\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer)\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction setReplace (replace, val, k, parent) {\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n  if (propertyDescriptor.get !== undefined) {\n    if (propertyDescriptor.configurable) {\n      Object.defineProperty(parent, k, { value: replace })\n      arr.push([parent, k, val, propertyDescriptor])\n    } else {\n      replacerStack.push([val, k, replace])\n    }\n  } else {\n    parent[k] = replace\n    arr.push([parent, k, val])\n  }\n}\n\nfunction decirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, i, stack, val, depth, options)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer)\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n    try {\n      if (typeof val.toJSON === 'function') {\n        return\n      }\n    } catch (_) {\n      return\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, i, stack, val, depth, options)\n        tmp[key] = val[key]\n      }\n      if (typeof parent !== 'undefined') {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues (replacer) {\n  replacer =\n    typeof replacer !== 'undefined'\n      ? replacer\n      : function (k, v) {\n        return v\n      }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = part[2]\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n"],"names":["fastSafeStringify","stringify","deterministicStringify","LIMIT_REPLACE_NODE","CIRCULAR_REPLACE_NODE","arr","replacerStack","defaultOptions","obj","replacer","spacer","options","decirc","res","replaceGetterValues","part","setReplace","replace","val","k","parent","propertyDescriptor","edgeIndex","stack","depth","i","keys","key","compareFunction","a","b","tmp","deterministicDecirc","v"],"mappings":"AAAA,IAAAA,EAAiBC,EACjBA,EAAU,QAAUA,EACpBA,EAAU,OAASC,EACnBD,EAAU,gBAAkBC,EAE5B,IAAIC,EAAqB,QACrBC,EAAwB,aAExBC,EAAM,CAAE,EACRC,EAAgB,CAAE,EAEtB,SAASC,GAAkB,CACzB,MAAO,CACL,WAAY,OAAO,iBACnB,WAAY,OAAO,gBACpB,CACH,CAGA,SAASN,EAAWO,EAAKC,EAAUC,EAAQC,EAAS,CAC9C,OAAOA,EAAY,MACrBA,EAAUJ,EAAgB,GAG5BK,EAAOJ,EAAK,GAAI,EAAG,CAAA,EAAI,OAAW,EAAGG,CAAO,EAC5C,IAAIE,EACJ,GAAI,CACEP,EAAc,SAAW,EAC3BO,EAAM,KAAK,UAAUL,EAAKC,EAAUC,CAAM,EAE1CG,EAAM,KAAK,UAAUL,EAAKM,EAAoBL,CAAQ,EAAGC,CAAM,CAElE,MAAW,CACV,OAAO,KAAK,UAAU,qEAAqE,CAC/F,QAAY,CACR,KAAOL,EAAI,SAAW,GAAG,CACvB,IAAIU,EAAOV,EAAI,IAAK,EAChBU,EAAK,SAAW,EAClB,OAAO,eAAeA,EAAK,CAAC,EAAGA,EAAK,CAAC,EAAGA,EAAK,CAAC,CAAC,EAE/CA,EAAK,CAAC,EAAEA,EAAK,CAAC,CAAC,EAAIA,EAAK,CAAC,CAE5B,CACF,CACD,OAAOF,CACT,CAEA,SAASG,EAAYC,EAASC,EAAKC,EAAGC,EAAQ,CAC5C,IAAIC,EAAqB,OAAO,yBAAyBD,EAAQD,CAAC,EAC9DE,EAAmB,MAAQ,OACzBA,EAAmB,cACrB,OAAO,eAAeD,EAAQD,EAAG,CAAE,MAAOF,EAAS,EACnDZ,EAAI,KAAK,CAACe,EAAQD,EAAGD,EAAKG,CAAkB,CAAC,GAE7Cf,EAAc,KAAK,CAACY,EAAKC,EAAGF,CAAO,CAAC,GAGtCG,EAAOD,CAAC,EAAIF,EACZZ,EAAI,KAAK,CAACe,EAAQD,EAAGD,CAAG,CAAC,EAE7B,CAEA,SAASN,EAAQM,EAAKC,EAAGG,EAAWC,EAAOH,EAAQI,EAAOb,EAAS,CACjEa,GAAS,EACT,IAAIC,EACJ,GAAI,OAAOP,GAAQ,UAAYA,IAAQ,KAAM,CAC3C,IAAKO,EAAI,EAAGA,EAAIF,EAAM,OAAQE,IAC5B,GAAIF,EAAME,CAAC,IAAMP,EAAK,CACpBF,EAAWZ,EAAuBc,EAAKC,EAAGC,CAAM,EAChD,MACD,CAGH,GACE,OAAOT,EAAQ,WAAe,KAC9Ba,EAAQb,EAAQ,WAChB,CACAK,EAAWb,EAAoBe,EAAKC,EAAGC,CAAM,EAC7C,MACD,CAED,GACE,OAAOT,EAAQ,WAAe,KAC9BW,EAAY,EAAIX,EAAQ,WACxB,CACAK,EAAWb,EAAoBe,EAAKC,EAAGC,CAAM,EAC7C,MACD,CAID,GAFAG,EAAM,KAAKL,CAAG,EAEV,MAAM,QAAQA,CAAG,EACnB,IAAKO,EAAI,EAAGA,EAAIP,EAAI,OAAQO,IAC1Bb,EAAOM,EAAIO,CAAC,EAAGA,EAAGA,EAAGF,EAAOL,EAAKM,EAAOb,CAAO,MAE5C,CACL,IAAIe,EAAO,OAAO,KAAKR,CAAG,EAC1B,IAAKO,EAAI,EAAGA,EAAIC,EAAK,OAAQD,IAAK,CAChC,IAAIE,EAAMD,EAAKD,CAAC,EAChBb,EAAOM,EAAIS,CAAG,EAAGA,EAAKF,EAAGF,EAAOL,EAAKM,EAAOb,CAAO,CACpD,CACF,CACDY,EAAM,IAAK,CACZ,CACH,CAGA,SAASK,EAAiBC,EAAGC,EAAG,CAC9B,OAAID,EAAIC,EACC,GAELD,EAAIC,EACC,EAEF,CACT,CAEA,SAAS5B,EAAwBM,EAAKC,EAAUC,EAAQC,EAAS,CAC3D,OAAOA,EAAY,MACrBA,EAAUJ,EAAgB,GAG5B,IAAIwB,EAAMC,EAAoBxB,EAAK,GAAI,EAAG,CAAE,EAAE,OAAW,EAAGG,CAAO,GAAKH,EACpEK,EACJ,GAAI,CACEP,EAAc,SAAW,EAC3BO,EAAM,KAAK,UAAUkB,EAAKtB,EAAUC,CAAM,EAE1CG,EAAM,KAAK,UAAUkB,EAAKjB,EAAoBL,CAAQ,EAAGC,CAAM,CAElE,MAAW,CACV,OAAO,KAAK,UAAU,qEAAqE,CAC/F,QAAY,CAER,KAAOL,EAAI,SAAW,GAAG,CACvB,IAAIU,EAAOV,EAAI,IAAK,EAChBU,EAAK,SAAW,EAClB,OAAO,eAAeA,EAAK,CAAC,EAAGA,EAAK,CAAC,EAAGA,EAAK,CAAC,CAAC,EAE/CA,EAAK,CAAC,EAAEA,EAAK,CAAC,CAAC,EAAIA,EAAK,CAAC,CAE5B,CACF,CACD,OAAOF,CACT,CAEA,SAASmB,EAAqBd,EAAKC,EAAGG,EAAWC,EAAOH,EAAQI,EAAOb,EAAS,CAC9Ea,GAAS,EACT,IAAIC,EACJ,GAAI,OAAOP,GAAQ,UAAYA,IAAQ,KAAM,CAC3C,IAAKO,EAAI,EAAGA,EAAIF,EAAM,OAAQE,IAC5B,GAAIF,EAAME,CAAC,IAAMP,EAAK,CACpBF,EAAWZ,EAAuBc,EAAKC,EAAGC,CAAM,EAChD,MACD,CAEH,GAAI,CACF,GAAI,OAAOF,EAAI,QAAW,WACxB,MAEH,MAAW,CACV,MACD,CAED,GACE,OAAOP,EAAQ,WAAe,KAC9Ba,EAAQb,EAAQ,WAChB,CACAK,EAAWb,EAAoBe,EAAKC,EAAGC,CAAM,EAC7C,MACD,CAED,GACE,OAAOT,EAAQ,WAAe,KAC9BW,EAAY,EAAIX,EAAQ,WACxB,CACAK,EAAWb,EAAoBe,EAAKC,EAAGC,CAAM,EAC7C,MACD,CAID,GAFAG,EAAM,KAAKL,CAAG,EAEV,MAAM,QAAQA,CAAG,EACnB,IAAKO,EAAI,EAAGA,EAAIP,EAAI,OAAQO,IAC1BO,EAAoBd,EAAIO,CAAC,EAAGA,EAAGA,EAAGF,EAAOL,EAAKM,EAAOb,CAAO,MAEzD,CAEL,IAAIoB,EAAM,CAAE,EACRL,EAAO,OAAO,KAAKR,CAAG,EAAE,KAAKU,CAAe,EAChD,IAAKH,EAAI,EAAGA,EAAIC,EAAK,OAAQD,IAAK,CAChC,IAAIE,EAAMD,EAAKD,CAAC,EAChBO,EAAoBd,EAAIS,CAAG,EAAGA,EAAKF,EAAGF,EAAOL,EAAKM,EAAOb,CAAO,EAChEoB,EAAIJ,CAAG,EAAIT,EAAIS,CAAG,CACnB,CACD,GAAI,OAAOP,EAAW,IACpBf,EAAI,KAAK,CAACe,EAAQD,EAAGD,CAAG,CAAC,EACzBE,EAAOD,CAAC,EAAIY,MAEZ,QAAOA,CAEV,CACDR,EAAM,IAAK,CACZ,CACH,CAIA,SAAST,EAAqBL,EAAU,CACtC,OAAAA,EACE,OAAOA,EAAa,IAChBA,EACA,SAAUU,EAAGc,EAAG,CAChB,OAAOA,CACR,EACE,SAAUN,EAAKT,EAAK,CACzB,GAAIZ,EAAc,OAAS,EACzB,QAAS,EAAI,EAAG,EAAIA,EAAc,OAAQ,IAAK,CAC7C,IAAIS,EAAOT,EAAc,CAAC,EAC1B,GAAIS,EAAK,CAAC,IAAMY,GAAOZ,EAAK,CAAC,IAAMG,EAAK,CACtCA,EAAMH,EAAK,CAAC,EACZT,EAAc,OAAO,EAAG,CAAC,EACzB,KACD,CACF,CAEH,OAAOG,EAAS,KAAK,KAAMkB,EAAKT,CAAG,CACpC,CACH","x_google_ignoreList":[0]}