{"version":3,"file":"eth-block-tracker-p6MLmKNF.js","sources":["../../node_modules/eth-block-tracker/dist/BaseBlockTracker.js","../../node_modules/eth-block-tracker/dist/logging-utils.js","../../node_modules/eth-block-tracker/dist/PollingBlockTracker.js","../../node_modules/eth-block-tracker/dist/SubscribeBlockTracker.js","../../node_modules/eth-block-tracker/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseBlockTracker = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst sec = 1000;\nconst calculateSum = (accumulator, currentValue) => accumulator + currentValue;\nconst blockTrackerEvents = ['sync', 'latest'];\nclass BaseBlockTracker extends safe_event_emitter_1.default {\n    constructor(opts) {\n        super();\n        // config\n        this._blockResetDuration = opts.blockResetDuration || 20 * sec;\n        this._usePastBlocks = opts.usePastBlocks || false;\n        // state\n        this._currentBlock = null;\n        this._isRunning = false;\n        // bind functions for internal use\n        this._onNewListener = this._onNewListener.bind(this);\n        this._onRemoveListener = this._onRemoveListener.bind(this);\n        this._resetCurrentBlock = this._resetCurrentBlock.bind(this);\n        // listen for handler changes\n        this._setupInternalEvents();\n    }\n    async destroy() {\n        this._cancelBlockResetTimeout();\n        await this._maybeEnd();\n        super.removeAllListeners();\n    }\n    isRunning() {\n        return this._isRunning;\n    }\n    getCurrentBlock() {\n        return this._currentBlock;\n    }\n    async getLatestBlock() {\n        // return if available\n        if (this._currentBlock) {\n            return this._currentBlock;\n        }\n        // wait for a new latest block\n        const latestBlock = await new Promise((resolve) => this.once('latest', resolve));\n        // return newly set current block\n        return latestBlock;\n    }\n    // dont allow module consumer to remove our internal event listeners\n    removeAllListeners(eventName) {\n        // perform default behavior, preserve fn arity\n        if (eventName) {\n            super.removeAllListeners(eventName);\n        }\n        else {\n            super.removeAllListeners();\n        }\n        // re-add internal events\n        this._setupInternalEvents();\n        // trigger stop check just in case\n        this._onRemoveListener();\n        return this;\n    }\n    _setupInternalEvents() {\n        // first remove listeners for idempotence\n        this.removeListener('newListener', this._onNewListener);\n        this.removeListener('removeListener', this._onRemoveListener);\n        // then add them\n        this.on('newListener', this._onNewListener);\n        this.on('removeListener', this._onRemoveListener);\n    }\n    _onNewListener(eventName) {\n        // `newListener` is called *before* the listener is added\n        if (blockTrackerEvents.includes(eventName)) {\n            this._maybeStart();\n        }\n    }\n    _onRemoveListener() {\n        // `removeListener` is called *after* the listener is removed\n        if (this._getBlockTrackerEventCount() > 0) {\n            return;\n        }\n        this._maybeEnd();\n    }\n    async _maybeStart() {\n        if (this._isRunning) {\n            return;\n        }\n        this._isRunning = true;\n        // cancel setting latest block to stale\n        this._cancelBlockResetTimeout();\n        await this._start();\n        this.emit('_started');\n    }\n    async _maybeEnd() {\n        if (!this._isRunning) {\n            return;\n        }\n        this._isRunning = false;\n        this._setupBlockResetTimeout();\n        await this._end();\n        this.emit('_ended');\n    }\n    _getBlockTrackerEventCount() {\n        return blockTrackerEvents\n            .map((eventName) => this.listenerCount(eventName))\n            .reduce(calculateSum);\n    }\n    _shouldUseNewBlock(newBlock) {\n        const currentBlock = this._currentBlock;\n        if (!currentBlock) {\n            return true;\n        }\n        const newBlockInt = hexToInt(newBlock);\n        const currentBlockInt = hexToInt(currentBlock);\n        return ((this._usePastBlocks && newBlockInt < currentBlockInt) ||\n            newBlockInt > currentBlockInt);\n    }\n    _newPotentialLatest(newBlock) {\n        if (!this._shouldUseNewBlock(newBlock)) {\n            return;\n        }\n        this._setCurrentBlock(newBlock);\n    }\n    _setCurrentBlock(newBlock) {\n        const oldBlock = this._currentBlock;\n        this._currentBlock = newBlock;\n        this.emit('latest', newBlock);\n        this.emit('sync', { oldBlock, newBlock });\n    }\n    _setupBlockResetTimeout() {\n        // clear any existing timeout\n        this._cancelBlockResetTimeout();\n        // clear latest block when stale\n        this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this._blockResetDuration);\n        // nodejs - dont hold process open\n        if (this._blockResetTimeout.unref) {\n            this._blockResetTimeout.unref();\n        }\n    }\n    _cancelBlockResetTimeout() {\n        if (this._blockResetTimeout) {\n            clearTimeout(this._blockResetTimeout);\n        }\n    }\n    _resetCurrentBlock() {\n        this._currentBlock = null;\n    }\n}\nexports.BaseBlockTracker = BaseBlockTracker;\n/**\n * Converts a number represented as a string in hexadecimal format into a native\n * number.\n *\n * @param hexInt - The hex string.\n * @returns The number.\n */\nfunction hexToInt(hexInt) {\n    return Number.parseInt(hexInt, 16);\n}\n//# sourceMappingURL=BaseBlockTracker.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createModuleLogger = exports.projectLogger = void 0;\nconst utils_1 = require(\"@metamask/utils\");\nObject.defineProperty(exports, \"createModuleLogger\", { enumerable: true, get: function () { return utils_1.createModuleLogger; } });\nexports.projectLogger = (0, utils_1.createProjectLogger)('eth-block-tracker');\n//# sourceMappingURL=logging-utils.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PollingBlockTracker = void 0;\nconst json_rpc_random_id_1 = __importDefault(require(\"json-rpc-random-id\"));\nconst pify_1 = __importDefault(require(\"pify\"));\nconst BaseBlockTracker_1 = require(\"./BaseBlockTracker\");\nconst logging_utils_1 = require(\"./logging-utils\");\nconst log = (0, logging_utils_1.createModuleLogger)(logging_utils_1.projectLogger, 'polling-block-tracker');\nconst createRandomId = (0, json_rpc_random_id_1.default)();\nconst sec = 1000;\nclass PollingBlockTracker extends BaseBlockTracker_1.BaseBlockTracker {\n    constructor(opts = {}) {\n        var _a;\n        // parse + validate args\n        if (!opts.provider) {\n            throw new Error('PollingBlockTracker - no provider specified.');\n        }\n        super(Object.assign(Object.assign({}, opts), { blockResetDuration: (_a = opts.blockResetDuration) !== null && _a !== void 0 ? _a : opts.pollingInterval }));\n        // config\n        this._provider = opts.provider;\n        this._pollingInterval = opts.pollingInterval || 20 * sec;\n        this._retryTimeout = opts.retryTimeout || this._pollingInterval / 10;\n        this._keepEventLoopActive =\n            opts.keepEventLoopActive === undefined ? true : opts.keepEventLoopActive;\n        this._setSkipCacheFlag = opts.setSkipCacheFlag || false;\n    }\n    // trigger block polling\n    async checkForLatestBlock() {\n        await this._updateLatestBlock();\n        return await this.getLatestBlock();\n    }\n    async _start() {\n        this._synchronize();\n    }\n    async _end() {\n        // No-op\n    }\n    async _synchronize() {\n        var _a;\n        while (this._isRunning) {\n            try {\n                await this._updateLatestBlock();\n                const promise = timeout(this._pollingInterval, !this._keepEventLoopActive);\n                this.emit('_waitingForNextIteration');\n                await promise;\n            }\n            catch (err) {\n                const newErr = new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\\n${(_a = err.stack) !== null && _a !== void 0 ? _a : err}`);\n                try {\n                    this.emit('error', newErr);\n                }\n                catch (emitErr) {\n                    console.error(newErr);\n                }\n                const promise = timeout(this._retryTimeout, !this._keepEventLoopActive);\n                this.emit('_waitingForNextIteration');\n                await promise;\n            }\n        }\n    }\n    async _updateLatestBlock() {\n        // fetch + set latest block\n        const latestBlock = await this._fetchLatestBlock();\n        this._newPotentialLatest(latestBlock);\n    }\n    async _fetchLatestBlock() {\n        const req = {\n            jsonrpc: '2.0',\n            id: createRandomId(),\n            method: 'eth_blockNumber',\n            params: [],\n        };\n        if (this._setSkipCacheFlag) {\n            req.skipCache = true;\n        }\n        log('Making request', req);\n        const res = await (0, pify_1.default)((cb) => this._provider.sendAsync(req, cb))();\n        log('Got response', res);\n        if (res.error) {\n            throw new Error(`PollingBlockTracker - encountered error fetching block:\\n${res.error.message}`);\n        }\n        return res.result;\n    }\n}\nexports.PollingBlockTracker = PollingBlockTracker;\n/**\n * Waits for the specified amount of time.\n *\n * @param duration - The amount of time in milliseconds.\n * @param unref - Assuming this function is run in a Node context, governs\n * whether Node should wait before the `setTimeout` has completed before ending\n * the process (true for no, false for yes). Defaults to false.\n * @returns A promise that can be used to wait.\n */\nfunction timeout(duration, unref) {\n    return new Promise((resolve) => {\n        const timeoutRef = setTimeout(resolve, duration);\n        // don't keep process open\n        if (timeoutRef.unref && unref) {\n            timeoutRef.unref();\n        }\n    });\n}\n//# sourceMappingURL=PollingBlockTracker.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscribeBlockTracker = void 0;\nconst json_rpc_random_id_1 = __importDefault(require(\"json-rpc-random-id\"));\nconst BaseBlockTracker_1 = require(\"./BaseBlockTracker\");\nconst createRandomId = (0, json_rpc_random_id_1.default)();\nclass SubscribeBlockTracker extends BaseBlockTracker_1.BaseBlockTracker {\n    constructor(opts = {}) {\n        // parse + validate args\n        if (!opts.provider) {\n            throw new Error('SubscribeBlockTracker - no provider specified.');\n        }\n        // BaseBlockTracker constructor\n        super(opts);\n        // config\n        this._provider = opts.provider;\n        this._subscriptionId = null;\n    }\n    async checkForLatestBlock() {\n        return await this.getLatestBlock();\n    }\n    async _start() {\n        if (this._subscriptionId === undefined || this._subscriptionId === null) {\n            try {\n                const blockNumber = (await this._call('eth_blockNumber'));\n                this._subscriptionId = (await this._call('eth_subscribe', 'newHeads'));\n                this._provider.on('data', this._handleSubData.bind(this));\n                this._newPotentialLatest(blockNumber);\n            }\n            catch (e) {\n                this.emit('error', e);\n            }\n        }\n    }\n    async _end() {\n        if (this._subscriptionId !== null && this._subscriptionId !== undefined) {\n            try {\n                await this._call('eth_unsubscribe', this._subscriptionId);\n                this._subscriptionId = null;\n            }\n            catch (e) {\n                this.emit('error', e);\n            }\n        }\n    }\n    _call(method, ...params) {\n        return new Promise((resolve, reject) => {\n            this._provider.sendAsync({\n                id: createRandomId(),\n                method,\n                params,\n                jsonrpc: '2.0',\n            }, (err, res) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(res.result);\n                }\n            });\n        });\n    }\n    _handleSubData(_, response) {\n        var _a;\n        if (response.method === 'eth_subscription' &&\n            ((_a = response.params) === null || _a === void 0 ? void 0 : _a.subscription) === this._subscriptionId) {\n            this._newPotentialLatest(response.params.result.number);\n        }\n    }\n}\nexports.SubscribeBlockTracker = SubscribeBlockTracker;\n//# sourceMappingURL=SubscribeBlockTracker.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./PollingBlockTracker\"), exports);\n__exportStar(require(\"./SubscribeBlockTracker\"), exports);\n//# sourceMappingURL=index.js.map"],"names":["__importDefault","this","mod","BaseBlockTracker_1","safe_event_emitter_1","require$$0","sec","calculateSum","accumulator","currentValue","blockTrackerEvents","BaseBlockTracker","opts","resolve","eventName","newBlock","currentBlock","newBlockInt","hexToInt","currentBlockInt","oldBlock","hexInt","exports","utils_1","PollingBlockTracker_1","json_rpc_random_id_1","pify_1","require$$1","require$$2","logging_utils_1","require$$3","log","createRandomId","PollingBlockTracker","_a","promise","timeout","err","newErr","latestBlock","req","res","cb","duration","unref","timeoutRef","SubscribeBlockTracker_1","SubscribeBlockTracker","blockNumber","method","params","reject","_","response","__createBinding","o","m","k","k2","__exportStar","p"],"mappings":"8MACIA,EAAmBC,GAAQA,EAAK,iBAAoB,SAAUC,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAeC,EAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EACpCA,EAAA,iBAAG,OAC3B,MAAMC,EAAuBJ,EAAgBK,CAAuC,EAC9EC,EAAM,IACNC,EAAe,CAACC,EAAaC,IAAiBD,EAAcC,EAC5DC,EAAqB,CAAC,OAAQ,QAAQ,EAC5C,MAAMC,UAAyBP,EAAqB,OAAQ,CACxD,YAAYQ,EAAM,CACd,QAEA,KAAK,oBAAsBA,EAAK,oBAAsB,GAAKN,EAC3D,KAAK,eAAiBM,EAAK,eAAiB,GAE5C,KAAK,cAAgB,KACrB,KAAK,WAAa,GAElB,KAAK,eAAiB,KAAK,eAAe,KAAK,IAAI,EACnD,KAAK,kBAAoB,KAAK,kBAAkB,KAAK,IAAI,EACzD,KAAK,mBAAqB,KAAK,mBAAmB,KAAK,IAAI,EAE3D,KAAK,qBAAoB,CAC5B,CACD,MAAM,SAAU,CACZ,KAAK,yBAAwB,EAC7B,MAAM,KAAK,YACX,MAAM,mBAAkB,CAC3B,CACD,WAAY,CACR,OAAO,KAAK,UACf,CACD,iBAAkB,CACd,OAAO,KAAK,aACf,CACD,MAAM,gBAAiB,CAEnB,OAAI,KAAK,cACE,KAAK,cAGI,MAAM,IAAI,QAASC,GAAY,KAAK,KAAK,SAAUA,CAAO,CAAC,CAGlF,CAED,mBAAmBC,EAAW,CAE1B,OAAIA,EACA,MAAM,mBAAmBA,CAAS,EAGlC,MAAM,mBAAkB,EAG5B,KAAK,qBAAoB,EAEzB,KAAK,kBAAiB,EACf,IACV,CACD,sBAAuB,CAEnB,KAAK,eAAe,cAAe,KAAK,cAAc,EACtD,KAAK,eAAe,iBAAkB,KAAK,iBAAiB,EAE5D,KAAK,GAAG,cAAe,KAAK,cAAc,EAC1C,KAAK,GAAG,iBAAkB,KAAK,iBAAiB,CACnD,CACD,eAAeA,EAAW,CAElBJ,EAAmB,SAASI,CAAS,GACrC,KAAK,YAAW,CAEvB,CACD,mBAAoB,CAEZ,KAAK,2BAA4B,EAAG,GAGxC,KAAK,UAAS,CACjB,CACD,MAAM,aAAc,CACZ,KAAK,aAGT,KAAK,WAAa,GAElB,KAAK,yBAAwB,EAC7B,MAAM,KAAK,SACX,KAAK,KAAK,UAAU,EACvB,CACD,MAAM,WAAY,CACT,KAAK,aAGV,KAAK,WAAa,GAClB,KAAK,wBAAuB,EAC5B,MAAM,KAAK,OACX,KAAK,KAAK,QAAQ,EACrB,CACD,4BAA6B,CACzB,OAAOJ,EACF,IAAKI,GAAc,KAAK,cAAcA,CAAS,CAAC,EAChD,OAAOP,CAAY,CAC3B,CACD,mBAAmBQ,EAAU,CACzB,MAAMC,EAAe,KAAK,cAC1B,GAAI,CAACA,EACD,MAAO,GAEX,MAAMC,EAAcC,EAASH,CAAQ,EAC/BI,EAAkBD,EAASF,CAAY,EAC7C,OAAS,KAAK,gBAAkBC,EAAcE,GAC1CF,EAAcE,CACrB,CACD,oBAAoBJ,EAAU,CACrB,KAAK,mBAAmBA,CAAQ,GAGrC,KAAK,iBAAiBA,CAAQ,CACjC,CACD,iBAAiBA,EAAU,CACvB,MAAMK,EAAW,KAAK,cACtB,KAAK,cAAgBL,EACrB,KAAK,KAAK,SAAUA,CAAQ,EAC5B,KAAK,KAAK,OAAQ,CAAE,SAAAK,EAAU,SAAAL,CAAU,CAAA,CAC3C,CACD,yBAA0B,CAEtB,KAAK,yBAAwB,EAE7B,KAAK,mBAAqB,WAAW,KAAK,mBAAoB,KAAK,mBAAmB,EAElF,KAAK,mBAAmB,OACxB,KAAK,mBAAmB,OAE/B,CACD,0BAA2B,CACnB,KAAK,oBACL,aAAa,KAAK,kBAAkB,CAE3C,CACD,oBAAqB,CACjB,KAAK,cAAgB,IACxB,CACL,CACwBZ,EAAA,iBAAGQ,EAQ3B,SAASO,EAASG,EAAQ,CACtB,OAAO,OAAO,SAASA,EAAQ,EAAE,CACrC,uBC7JA,OAAO,eAAcC,EAAU,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5DA,EAA6B,mBAAAA,EAAA,cAAwB,OACrD,MAAMC,EAAUlB,EAChB,OAAO,eAAeiB,EAAS,qBAAsB,CAAE,WAAY,GAAM,IAAK,UAAY,CAAE,OAAOC,EAAQ,kBAAmB,CAAI,CAAA,EAClID,EAAwB,iBAAIC,EAAQ,qBAAqB,mBAAmB,OCJ5E,IAAIvB,EAAmBC,GAAQA,EAAK,iBAAoB,SAAUC,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAesB,EAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EACjCA,EAAA,oBAAG,OAC9B,MAAMC,EAAuBzB,EAAgBK,CAA6B,EACpEqB,EAAS1B,EAAgB2B,CAAe,EACxCxB,EAAqByB,EACrBC,EAAkBC,EAClBC,KAAUF,EAAgB,oBAAoBA,EAAgB,cAAe,uBAAuB,EACpGG,KAAqBP,EAAqB,WAC1CnB,EAAM,IACZ,MAAM2B,UAA4B9B,EAAmB,gBAAiB,CAClE,YAAYS,EAAO,GAAI,CACnB,IAAIsB,EAEJ,GAAI,CAACtB,EAAK,SACN,MAAM,IAAI,MAAM,8CAA8C,EAElE,MAAM,OAAO,OAAO,OAAO,OAAO,CAAA,EAAIA,CAAI,EAAG,CAAE,oBAAqBsB,EAAKtB,EAAK,sBAAwB,MAAQsB,IAAO,OAASA,EAAKtB,EAAK,eAAiB,CAAA,CAAC,EAE1J,KAAK,UAAYA,EAAK,SACtB,KAAK,iBAAmBA,EAAK,iBAAmB,GAAKN,EACrD,KAAK,cAAgBM,EAAK,cAAgB,KAAK,iBAAmB,GAClE,KAAK,qBACDA,EAAK,sBAAwB,OAAY,GAAOA,EAAK,oBACzD,KAAK,kBAAoBA,EAAK,kBAAoB,EACrD,CAED,MAAM,qBAAsB,CACxB,aAAM,KAAK,qBACJ,MAAM,KAAK,gBACrB,CACD,MAAM,QAAS,CACX,KAAK,aAAY,CACpB,CACD,MAAM,MAAO,CAEZ,CACD,MAAM,cAAe,CAEjB,QADIsB,EACG,KAAK,YACR,GAAI,CACA,MAAM,KAAK,qBACX,MAAMC,EAAUC,EAAQ,KAAK,iBAAkB,CAAC,KAAK,oBAAoB,EACzE,KAAK,KAAK,0BAA0B,EACpC,MAAMD,CACT,OACME,EAAK,CACR,MAAMC,EAAS,IAAI,MAAM;AAAA,GAAyFJ,EAAKG,EAAI,SAAW,MAAQH,IAAO,OAASA,EAAKG,CAAG,EAAE,EACxK,GAAI,CACA,KAAK,KAAK,QAASC,CAAM,CAC5B,MACe,CACZ,QAAQ,MAAMA,CAAM,CACvB,CACD,MAAMH,EAAUC,EAAQ,KAAK,cAAe,CAAC,KAAK,oBAAoB,EACtE,KAAK,KAAK,0BAA0B,EACpC,MAAMD,CACT,CAER,CACD,MAAM,oBAAqB,CAEvB,MAAMI,EAAc,MAAM,KAAK,oBAC/B,KAAK,oBAAoBA,CAAW,CACvC,CACD,MAAM,mBAAoB,CACtB,MAAMC,EAAM,CACR,QAAS,MACT,GAAIR,EAAgB,EACpB,OAAQ,kBACR,OAAQ,CAAE,CACtB,EACY,KAAK,oBACLQ,EAAI,UAAY,IAEpBT,EAAI,iBAAkBS,CAAG,EACzB,MAAMC,EAAM,QAAUf,EAAO,SAAUgB,GAAO,KAAK,UAAU,UAAUF,EAAKE,CAAE,CAAC,EAAC,EAEhF,GADAX,EAAI,eAAgBU,CAAG,EACnBA,EAAI,MACJ,MAAM,IAAI,MAAM;AAAA,EAA4DA,EAAI,MAAM,OAAO,EAAE,EAEnG,OAAOA,EAAI,MACd,CACL,CAC2BjB,EAAA,oBAAGS,EAU9B,SAASG,EAAQO,EAAUC,EAAO,CAC9B,OAAO,IAAI,QAAS/B,GAAY,CAC5B,MAAMgC,EAAa,WAAWhC,EAAS8B,CAAQ,EAE3CE,EAAW,OAASD,GACpBC,EAAW,MAAK,CAE5B,CAAK,CACL,UCxGI7C,EAAmBC,GAAQA,EAAK,iBAAoB,SAAUC,EAAK,CACnE,OAAQA,GAAOA,EAAI,WAAcA,EAAM,CAAE,QAAWA,EACxD,EACA,OAAO,eAAe4C,EAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EAC/BA,EAAA,sBAAG,OAChC,MAAMrB,EAAuBzB,EAAgBK,CAA6B,EACpEF,EAAqBwB,EACrBK,KAAqBP,EAAqB,WAChD,MAAMsB,UAA8B5C,EAAmB,gBAAiB,CACpE,YAAYS,EAAO,GAAI,CAEnB,GAAI,CAACA,EAAK,SACN,MAAM,IAAI,MAAM,gDAAgD,EAGpE,MAAMA,CAAI,EAEV,KAAK,UAAYA,EAAK,SACtB,KAAK,gBAAkB,IAC1B,CACD,MAAM,qBAAsB,CACxB,OAAO,MAAM,KAAK,gBACrB,CACD,MAAM,QAAS,CACX,GAAI,KAAK,kBAAoB,QAAa,KAAK,kBAAoB,KAC/D,GAAI,CACA,MAAMoC,EAAe,MAAM,KAAK,MAAM,iBAAiB,EACvD,KAAK,gBAAmB,MAAM,KAAK,MAAM,gBAAiB,UAAU,EACpE,KAAK,UAAU,GAAG,OAAQ,KAAK,eAAe,KAAK,IAAI,CAAC,EACxD,KAAK,oBAAoBA,CAAW,CACvC,OACM,EAAG,CACN,KAAK,KAAK,QAAS,CAAC,CACvB,CAER,CACD,MAAM,MAAO,CACT,GAAI,KAAK,kBAAoB,MAAQ,KAAK,kBAAoB,OAC1D,GAAI,CACA,MAAM,KAAK,MAAM,kBAAmB,KAAK,eAAe,EACxD,KAAK,gBAAkB,IAC1B,OACM,EAAG,CACN,KAAK,KAAK,QAAS,CAAC,CACvB,CAER,CACD,MAAMC,KAAWC,EAAQ,CACrB,OAAO,IAAI,QAAQ,CAACrC,EAASsC,IAAW,CACpC,KAAK,UAAU,UAAU,CACrB,GAAInB,EAAgB,EACpB,OAAAiB,EACA,OAAAC,EACA,QAAS,KACzB,EAAe,CAACb,EAAKI,IAAQ,CACTJ,EACAc,EAAOd,CAAG,EAGVxB,EAAQ4B,EAAI,MAAM,CAEtC,CAAa,CACb,CAAS,CACJ,CACD,eAAeW,EAAGC,EAAU,CACxB,IAAInB,EACAmB,EAAS,SAAW,sBAClBnB,EAAKmB,EAAS,UAAY,MAAQnB,IAAO,OAAS,OAASA,EAAG,gBAAkB,KAAK,iBACvF,KAAK,oBAAoBmB,EAAS,OAAO,OAAO,MAAM,CAE7D,CACL,CAC6BP,EAAA,sBAAGC,eCxEhC,IAAIO,EAAmBrD,GAAQA,EAAK,kBAAqB,OAAO,OAAU,SAASsD,EAAGC,EAAGC,EAAGC,EAAI,CACxFA,IAAO,SAAWA,EAAKD,GAC3B,OAAO,eAAeF,EAAGG,EAAI,CAAE,WAAY,GAAM,IAAK,UAAW,CAAE,OAAOF,EAAEC,CAAC,CAAE,CAAI,CAAA,CACtF,EAAK,SAASF,EAAGC,EAAGC,EAAGC,EAAI,CACpBA,IAAO,SAAWA,EAAKD,GAC3BF,EAAEG,CAAE,EAAIF,EAAEC,CAAC,CACd,GACGE,EAAgB1D,GAAQA,EAAK,cAAiB,SAASuD,EAAGlC,EAAS,CACnE,QAASsC,KAAKJ,EAAOI,IAAM,WAAa,CAAC,OAAO,UAAU,eAAe,KAAKtC,EAASsC,CAAC,GAAGN,EAAgBhC,EAASkC,EAAGI,CAAC,CAC5H,EACA,OAAO,eAActC,EAAU,aAAc,CAAE,MAAO,EAAI,CAAE,EAC5DqC,EAAatD,EAAkCiB,CAAO,EACtDqC,EAAahC,EAAoCL,CAAO","x_google_ignoreList":[0,1,2,3,4]}